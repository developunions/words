services:
  # Сервис с базой данных (остается без изменений)
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: words_game
      POSTGRES_PASSWORD: yQMeKidypmQg4YWP902PotNKC5jrQo
      POSTGRES_DB: wordgamedb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal_net

  # <<< НОВЫЙ СЕРВИС ДЛЯ БЭКЕНДА >>>
  backend:
    build:
    context: .  # <-- Указываем корень проекта как контекст
    dockerfile: ./backend/Dockerfile # <-- Указываем путь к Dockerfile
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - internal_net

  # <<< НОВЫЙ СЕРВИС ДЛЯ ФРОНТЕНДА >>>
  frontend:
    build:
      context: ./frontend # Указываем, что Dockerfile находится в папке frontend
    restart: always
    networks:
      - internal_net

  # Сервис Nginx теперь будет общаться с frontend и backend
  nginx:
    image: nginx:1.25-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - internal_net
    depends_on:
      - frontend
      - backend

  # Сервис Certbot (остается без изменений)
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

networks:
  internal_net:
    driver: bridge

volumes:
  postgres_data: